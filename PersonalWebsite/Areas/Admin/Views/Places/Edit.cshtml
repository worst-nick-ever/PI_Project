@model DatabaseEntities.Others.Place

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("", "", FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal width-50">
        <h4>Place</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="photo" id="photo" class="form-control text-box single-line" />
                @Html.ValidationMessageFor(model => model.PhotoURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <img src="@Url.Content("~/Content/Uploads/" + Model.PhotoURL)" style="width: 100%; margin-top: 10px;"/>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div id="map" class="width-50"></div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    @Scripts.Render("~/Scripts/Map.js")
    <script>
        map.addListener('click', function (e) {
            placeMarkerAndPanTo(e.latLng, map);
            $('#Longitude').val(e.latLng.lng().toFixed(5));
            $('#Latitude').val(e.latLng.lat().toFixed(5));
        });

        $(function () {
            var placeLatLng = new google.maps.LatLng({lat : @Model.Latitude, lng : @Model.Longitude});
            lastPinnedMarker = new google.maps.Marker({
                position: placeLatLng,
                map: map
            });
            map.panTo(placeLatLng);
            map.setCenter(placeLatLng);
            map.setZoom(15);
        });
    </script>
}
